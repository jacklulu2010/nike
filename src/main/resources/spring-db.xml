<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- =================================================================== -->
	<!-- 数据源配置 -->
	<!-- =================================================================== -->
	<!-- 核心库 druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      	<!-- 配置数据库驱动 -->
      	<property name="driverClassName" value="${db.connection.driverClassName}" />
      	<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.connection.url}" />
		<property name="username" value="${db.connection.username}" />
		<property name="password" value="${db.connection.password}" />
        
      	<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.connection.initialSize}" />
		<property name="minIdle" value="${db.connection.minIdle}" />
		<property name="maxActive" value="${db.connection.maxActive}" />
   
      	<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.connection.maxWait}" />
   
      	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.connection.timeBetweenEvictionRunsMillis}" />
		<property name="timeBetweenLogStatsMillis" value="${db.connection.timeBetweenLogStatsMillis}" />

      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.connection.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${db.connection.validationQuery}" />
		<property name="testWhileIdle" value="${db.connection.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.connection.testOnBorrow}" />
		<property name="testOnReturn" value="${db.connection.testOnReturn}" />
   
     	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.connection.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.connection.maxPoolPreparedStatementPerConnectionSize}" />
    	
    	<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${db.connection.filters}" />
	</bean>
	
	<!-- =================================================================== -->
	<!-- 核心库 Transaction Define -->
	<!-- =================================================================== -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="aopTxProxy" expression="execution(* com.stingyog.nike.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aopTxProxy" order="1"/>
	</aop:config>

	<!-- =================================================================== -->
	<!-- mybatis 相关配置 -->
	<!-- =================================================================== -->
	<bean id="mybatisSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--<property name="mapperLocations" value="classpath:com/stingyog/nike/dao/**/*.xml" />-->
		<property name="typeAliasesPackage" value="com.wondersgroup.sdcl.model" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="mybatisSqlSessionFactory" />
		<property name="basePackage" value="com.stingyog.nike.dao" />
	</bean>


	<!-- 配置jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans> 